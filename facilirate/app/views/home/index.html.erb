<%

# Convert types ActiveRecord to an array, and sort by it's type
@types = @types.to_a.sort! { |a, b| a.ftype <=> b.ftype }

@buildings = @buildings.to_a.sort! { |a, b| a.name <=> b.name }
#buildings = ['1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1', '1']
#TODO - Allow scroll instead of extension

@accountOptions = ["Account Home", "Sign Out"]
%>

<% showWhenLoggedIn = ["Edit Profile","Sign Out"]%>
<div class='background'>
    <% if user_signed_in? %>
        <div class="login btn-group">
            <%= link_to("My Account", '/user/viewProfile.html', class:'btn btn-default') %>
        </div>
    <% else %>
            <div class="login btn-group">
                <%= link_to("Login/Sign Up", '/users/sign_in.html', class:"btn btn-default selections") %>
            </div>
    <% end %>
    <div class='surrounding homeSurrounding'>
        <div class='middleBox boxInfo homeBoxInfo'></div>
        <div class='boxInfo homeBoxInfo'>
            <h1 class='header'>Welcome to FaciliRate</h1>
            <br/>
            <%= form_tag("/result/showResult", method: "get") do %>
            <% typeShow = @types.map { |val| val.ftype } %>
            <div class='childLeft'>
                Enter the building name
                <br>
                <%= text_field_tag(:building, "", class: "form-control") %>
                <br>
            </div>

            <div class='childRight'>
                Enter the room number
                <br>
                <%= text_field_tag(:room, "", class: "form-control") %>
                <br>
            </div>


            <div class="secondRow">
                <div class="dropdown">
                    <%= select_tag(:facility, options_for_select(typeShow), prompt: "Select a Facility Type") %>
                </div>
            </div>

            <div class="thirdRow">
                <%= submit_tag("Search", class: "btn btn-default") %>
            </div>
            <% end %>
        </div>
    </div>
</div>

<%= javascript_tag do %>

var buildingAutoComplete = new autoComplete({
    selector: document.getElementById("building"),
    minChars: 2,
    source: function(term, suggest){
        term = term.toLowerCase();
        <% buildingShow = @buildings.map { |val| val.name } %>
        var choices = <%= raw buildingShow.to_json %>
        var matches = [];
        for (i=0; i< choices.length; i++)
            if (~choices[i].toLowerCase().indexOf(term)) matches.push(choices[i]);
        suggest(matches);
    }
});
<% end %>
